# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CheckForEmailExistenceInput {
  email: String!
}

input CheckForUsernameExistenceInput {
  userName: String!
}

type CommonResponse {
  succeeded: Boolean!
}

input CreatePostInput {
  caption: String!
  location: String!
  photoLink: String!
  userId: String!
}

input CreateUserInput {
  bio: String
  email: String!
  fullName: String!
  password: String!
  profileLink: String
  userName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginWithEmailInput {
  email: String!
  password: String!
}

type Mutation {
  createPost(createPostInput: CreatePostInput!): Post!
  createUser(createUserInput: CreateUserInput!): Tokens!
  deletePost(id: String!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
}

type Post {
  caption: String!
  createdAt: DateTime!
  id: ID!
  location: String!
  photoLink: String!
  updatedAt: DateTime!
  userId: String!
}

type Query {
  checkForEmailExistence(checkForEmailExistenceInput: CheckForEmailExistenceInput!): CommonResponse!
  checkForUsernameExistence(checkForUsernameExistenceInput: CheckForUsernameExistenceInput!): CommonResponse!
  loginWithEmail(loginWithEmailInput: LoginWithEmailInput!): Tokens!
  logout(userId: String!): UserIdResponse!
  posts: [Post!]!
  refreshTokens: Tokens!
  user(id: String!): UserProfile!
}

type Tokens {
  accessToken: String!
  refreshToken: String!
}

input UpdatePostInput {
  caption: String!
  id: String!
  location: String!
  photoLink: String!
}

type UserIdResponse {
  userId: String!
}

type UserInfo {
  bio: String
  createdAt: DateTime!
  fullName: String!
  id: String!
  profileLink: String
  updatedAt: DateTime!
}

type UserProfile {
  createdAt: DateTime!
  email: String!
  id: ID!
  updatedAt: DateTime!
  userInfo: UserInfo!
  userName: String!
}